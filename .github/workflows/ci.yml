name: ci

on:
  push:
    branches:
      - main

jobs:
  build:
    name: react build
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout Github Action
        uses: actions/checkout@v4
      
      - name: Create env file
        run: |
          echo "${{ secrets.ENVFILE }}" > .env.production.local

      - name: Build Docker image
        run: docker build . --tag ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY_NAME }}:prod
  
      - name: Push Docker image
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY_NAME }}:prod
        
  deploy:
    name: react deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: docker login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Deploy to Prod Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_PRIVATE_KEY }}
          script: |
            # 도커 컨테이너 재배포
            sudo docker stop ${{ secrets.DOCKER_CONTAINER_NAME }}
            sudo docker rm ${{ secrets.DOCKER_CONTAINER_NAME }}
            sudo docker rmi ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY_NAME }}:prod
            sudo docker run -d --name ${{ secrets.DOCKER_CONTAINER_NAME }} --network ${{ secrets.DOCKER_NETWORK_NAME }} -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY_NAME }}:prod

